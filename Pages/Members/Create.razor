@page "/members/create"
@using LibraryManagementSystem.Data.Models
@using LibraryManagementSystem.Data.Services
@inject NavigationManager NavigationManager
@inject IMemberService MemberService

<h3>Create New Member</h3>

<div class="row">
    <div class="col-md-6">
        <EditForm Model="@member" OnValidSubmit="HandleValidSubmit">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="form-group mb-3">
                <label for="membershipNumber">Membership Number</label>
                <InputText id="membershipNumber" @bind-Value="member.MembershipNumber" class="form-control" />
                <ValidationMessage For="@(() => member.MembershipNumber)" />
            </div>

            <div class="form-group mb-3">
                <label for="firstName">First Name</label>
                <InputText id="firstName" @bind-Value="member.FirstName" class="form-control" />
                <ValidationMessage For="@(() => member.FirstName)" />
            </div>

            <div class="form-group mb-3">
                <label for="lastName">Last Name</label>
                <InputText id="lastName" @bind-Value="member.LastName" class="form-control" />
                <ValidationMessage For="@(() => member.LastName)" />
            </div>

            <div class="form-group mb-3">
                <label for="email">Email</label>
                <InputText id="email" @bind-Value="member.Email" class="form-control" />
                <ValidationMessage For="@(() => member.Email)" />
            </div>

            <div class="form-group mb-3">
                <label for="phoneNumber">Phone Number</label>
                <InputText id="phoneNumber" @bind-Value="member.PhoneNumber" class="form-control" />
                <ValidationMessage For="@(() => member.PhoneNumber)" />
            </div>

            <div class="form-group mb-3">
                <label for="address">Address</label>
                <InputTextArea id="address" @bind-Value="member.Address" class="form-control" />
                <ValidationMessage For="@(() => member.Address)" />
            </div>

            <div class="form-group mb-3">
                <label for="dateOfBirth">Date of Birth</label>
                <InputDate id="dateOfBirth" @bind-Value="member.DateOfBirth" class="form-control" />
                <ValidationMessage For="@(() => member.DateOfBirth)" />
            </div>

            <div class="form-group mb-3">
                <label for="membershipStartDate">Membership Start Date</label>
                <InputDate id="membershipStartDate" @bind-Value="member.MembershipStartDate" class="form-control" />
                <ValidationMessage For="@(() => member.MembershipStartDate)" />
            </div>

            <div class="form-group mb-3">
                <label for="membershipEndDate">Membership End Date</label>
                <InputDate id="membershipEndDate" @bind-Value="member.MembershipEndDate" class="form-control" />
                <ValidationMessage For="@(() => member.MembershipEndDate)" />
            </div>

            <button type="submit" class="btn btn-primary">Create Member</button>
            <button type="button" class="btn btn-secondary" @onclick="NavigateToList">Cancel</button>
        </EditForm>
    </div>
</div>

@code {
    private Member member = new Member
    {
        MembershipStartDate = DateTime.Today,
        MembershipEndDate = DateTime.Today.AddYears(1)
    };

    private async Task HandleValidSubmit()
    {
        await MemberService.AddMemberAsync(member);
        NavigateToList();
    }

    private void NavigateToList()
    {
        NavigationManager.NavigateTo("/members");
    }
} 