@page "/catalog/{Id:int}"
@using LibraryManagementSystem.Data.Models
@using LibraryManagementSystem.Data.Services
@inject IBookService BookService
@inject IEmailService EmailService
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime

<PageTitle>Book Details - Library Management System</PageTitle>

@if (book == null)
{
    <div class="d-flex justify-content-center mt-5">
        <div class="spinner-border" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
    </div>
}
else
{
    <div class="container-fluid py-4">
        <nav aria-label="breadcrumb" class="mb-4">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="/catalog">Catalog</a></li>
                <li class="breadcrumb-item active">@book.Title</li>
            </ol>
        </nav>

        <div class="row">
            <div class="col-md-8">
                <div class="card">
                    <div class="card-body">
                        <h1 class="card-title mb-3">@book.Title</h1>
                        <h6 class="card-subtitle mb-4 text-muted">by @book.Author</h6>

                        <div class="mb-4">
                            <span class="badge bg-secondary">@book.Category</span>
                            @if (book.IsAvailable)
                            {
                                <span class="badge bg-success ms-2">Available</span>
                            }
                            else
                            {
                                <span class="badge bg-warning ms-2">Borrowed</span>
                            }
                        </div>

                        <h5 class="mb-3">Description</h5>
                        <p class="card-text">@book.Description</p>

                        <hr class="my-4" />

                        <div class="row">
                            <div class="col-md-6">
                                <h5 class="mb-3">Book Details</h5>
                                <table class="table table-sm">
                                    <tbody>
                                        <tr>
                                            <th scope="row">ISBN</th>
                                            <td>@book.ISBN</td>
                                        </tr>
                                        <tr>
                                            <th scope="row">Publisher</th>
                                            <td>@book.Publisher</td>
                                        </tr>
                                        <tr>
                                            <th scope="row">Publication Year</th>
                                            <td>@(book.PublicationDate?.Year ?? 0)</td>
                                        </tr>
                                        <tr>
                                            <th scope="row">Available Copies</th>
                                            <td>@book.AvailableCopies of @book.TotalCopies</td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                            <div class="col-md-6">
                                <h5 class="mb-3">Location</h5>
                                <table class="table table-sm">
                                    <tbody>
                                        <tr>
                                            <th scope="row">Section</th>
                                            <td>@book.Category</td>
                                        </tr>
                                        <tr>
                                            <th scope="row">Shelf</th>
                                            <td>@GetShelfLocation(book)</td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-md-4">
                <div class="card mb-4">
                    <div class="card-body">
                        <h5 class="card-title">Availability Status</h5>
                        <p class="card-text">
                            @if (book.IsAvailable)
                            {
                                <span class="text-success">
                                    <i class="bi bi-check-circle-fill"></i>
                                    This book is currently available for borrowing
                                </span>
                            }
                            else
                            {
                                <span class="text-warning">
                                    <i class="bi bi-exclamation-circle-fill"></i>
                                    All copies are currently borrowed
                                </span>
                            }
                        </p>
                        <div class="progress mb-3">
                            <div class="progress-bar @(book.IsAvailable ? "bg-success" : "bg-warning")"
                                 role="progressbar"
                                 style="width: @(((double)book.AvailableCopies / book.TotalCopies) * 100)%">
                            </div>
                        </div>
                        <small class="text-muted">
                            @book.AvailableCopies of @book.TotalCopies copies available
                        </small>
                    </div>
                </div>

                @if (book.IsAvailable)
                {
                    <div class="card">
                        <div class="card-body">
                            <h5 class="card-title">Rent this Book</h5>
                            <div class="mb-3">
                                <div class="d-flex justify-content-between align-items-center mb-2">
                                    <span>14 days rental:</span>
                                    <span class="badge bg-primary">$5.99</span>
                                </div>
                                <div class="d-flex justify-content-between align-items-center">
                                    <span>30 days rental:</span>
                                    <span class="badge bg-primary">$9.99</span>
                                </div>
                            </div>
                            <div class="d-grid gap-2">
                                <button class="btn btn-success btn-lg" @onclick="OpenRentModal">
                                    <i class="bi bi-cart"></i> Rent Now
                                </button>
                                <p class="card-text small text-muted text-center">
                                    <i class="bi bi-info-circle"></i>
                                    Multiple copies available. Pay with credit/debit card.
                                </p>
                            </div>
                        </div>
                    </div>
                }
                else
                {
                    <div class="card">
                        <div class="card-body">
                            <h5 class="card-title">Join the Waiting List</h5>
                            <p class="card-text">
                                All copies are currently borrowed. Visit the library desk to join the waiting list.
                            </p>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>

    @if (showRentModal)
    {
        <div class="modal fade show" style="display: block;" tabindex="-1">
            <div class="modal-dialog modal-dialog-centered">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Rent Book: @book.Title</h5>
                        <button type="button" class="btn-close" @onclick="CloseRentModal"></button>
                    </div>
                    <div class="modal-body">
                        <div class="mb-3">
                            <label class="form-label">Number of Copies</label>
                            <select class="form-select" @bind="numberOfCopies">
                                @for (int i = 1; i <= Math.Min(5, book.AvailableCopies); i++)
                                {
                                    <option value="@i">@i</option>
                                }
                            </select>
                        </div>

                        <div class="mb-3">
                            <label class="form-label">Rental Period</label>
                            <select class="form-select" @bind="rentalDays">
                                <option value="14">14 days ($@(GetRentalPrice(14)))</option>
                                <option value="30">30 days ($@(GetRentalPrice(30)))</option>
                            </select>
                        </div>

                        <div class="mb-3">
                            <label class="form-label">Email for Confirmation</label>
                            <input type="email" class="form-control" @bind="userEmail" />
                        </div>

                        <div class="alert alert-info">
                            <strong>Total Price: $@(GetTotalPrice())</strong>
                        </div>

                        <div class="mb-3">
                            <label class="form-label">Payment Method</label>
                            <div class="form-check">
                                <input class="form-check-input" type="radio" name="paymentMethod" 
                                       value="credit" checked="@(paymentMethod == "credit")"
                                       @onchange="@(() => paymentMethod = "credit")" />
                                <label class="form-check-label">Credit Card</label>
                            </div>
                            <div class="form-check">
                                <input class="form-check-input" type="radio" name="paymentMethod"
                                       value="debit" checked="@(paymentMethod == "debit")"
                                       @onchange="@(() => paymentMethod = "debit")" />
                                <label class="form-check-label">Debit Card</label>
                            </div>
                        </div>

                        @if (showPaymentForm)
                        {
                            <div class="mb-3">
                                <label class="form-label">Card Number</label>
                                <input type="text" class="form-control" @bind="cardNumber" 
                                       placeholder="1234 5678 9012 3456" />
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <label class="form-label">Expiry Date</label>
                                    <input type="text" class="form-control" @bind="cardExpiry" 
                                           placeholder="MM/YY" />
                                </div>
                                <div class="col-md-6">
                                    <label class="form-label">CVV</label>
                                    <input type="password" class="form-control" @bind="cardCvv" 
                                           placeholder="123" />
                                </div>
                            </div>
                        }
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" @onclick="CloseRentModal">Cancel</button>
                        @if (!showPaymentForm)
                        {
                            <button type="button" class="btn btn-primary" @onclick="ShowPaymentForm">
                                Proceed to Payment
                            </button>
                        }
                        else
                        {
                            <button type="button" class="btn btn-success" @onclick="ProcessPayment">
                                Pay $@(GetTotalPrice())
                            </button>
                        }
                    </div>
                </div>
            </div>
        </div>
        <div class="modal-backdrop fade show"></div>
    }
}

@code {
    [Parameter]
    public int Id { get; set; }

    private Book? book;
    private bool showRentModal = false;
    private bool showPaymentForm = false;
    private int numberOfCopies = 1;
    private int rentalDays = 14;
    private string userEmail = "";
    private string paymentMethod = "credit";
    private string cardNumber = "";
    private string cardExpiry = "";
    private string cardCvv = "";

    protected override async Task OnInitializedAsync()
    {
        await LoadBook();
    }

    private async Task LoadBook()
    {
        try
        {
            book = await BookService.GetBookByIdAsync(Id);
            if (book == null)
            {
                NavigationManager.NavigateTo("/catalog");
            }
        }
        catch
        {
            await JSRuntime.InvokeVoidAsync("alert", "Error loading book details");
            NavigationManager.NavigateTo("/catalog");
        }
    }

    private string GetShelfLocation(Book book)
    {
        // This is a simple example - you might want to implement a more sophisticated
        // shelf location system based on your library's organization
        return $"{book.Category.Substring(0, 1)}-{book.Id % 100:D2}";
    }

    private void OpenRentModal()
    {
        showRentModal = true;
        showPaymentForm = false;
        numberOfCopies = 1;
        rentalDays = 14;
        userEmail = "";
        paymentMethod = "credit";
        cardNumber = "";
        cardExpiry = "";
        cardCvv = "";
    }

    private void CloseRentModal()
    {
        showRentModal = false;
        showPaymentForm = false;
    }

    private void ShowPaymentForm()
    {
        if (string.IsNullOrWhiteSpace(userEmail))
        {
            JSRuntime.InvokeVoidAsync("alert", "Please enter your email address");
            return;
        }
        showPaymentForm = true;
    }

    private decimal GetRentalPrice(int days)
    {
        return days == 14 ? 5.99m : 9.99m;
    }

    private decimal GetTotalPrice()
    {
        return GetRentalPrice(rentalDays) * numberOfCopies;
    }

    private async Task ProcessPayment()
    {
        if (string.IsNullOrWhiteSpace(cardNumber) || 
            string.IsNullOrWhiteSpace(cardExpiry) || 
            string.IsNullOrWhiteSpace(cardCvv))
        {
            await JSRuntime.InvokeVoidAsync("alert", "Please fill in all payment details");
            return;
        }

        if (string.IsNullOrWhiteSpace(userEmail))
        {
            await JSRuntime.InvokeVoidAsync("alert", "Please enter your email address");
            return;
        }

        try
        {
            // Generate a unique purchase ID
            string purchaseId = $"LMS-{DateTime.UtcNow:yyyyMMdd}-{Guid.NewGuid().ToString("N").Substring(0, 8)}";

            // TODO: Process actual payment here
            // This is where you'd integrate with your payment gateway

            try
            {
                // Send confirmation email
                await EmailService.SendRentalConfirmationAsync(
                    userEmail,
                    purchaseId,
                    book.Title,
                    numberOfCopies,
                    rentalDays,
                    GetTotalPrice()
                );

                await JSRuntime.InvokeVoidAsync("alert", 
                    $"Payment successful! Your purchase ID is: {purchaseId}\n" +
                    $"A confirmation email has been sent to {userEmail}");

                CloseRentModal();
            }
            catch (Exception emailEx)
            {
                // Payment succeeded but email failed
                await JSRuntime.InvokeVoidAsync("alert", 
                    $"Payment successful! Your purchase ID is: {purchaseId}\n\n" +
                    $"However, we couldn't send the confirmation email: {emailEx.Message}\n" +
                    "Please save your purchase ID and contact support if needed.");
                
                CloseRentModal();
            }
        }
        catch (Exception ex)
        {
            await JSRuntime.InvokeVoidAsync("alert", $"Payment failed: {ex.Message}");
        }
    }
} 